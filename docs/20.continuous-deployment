---
layout: presentation
title: Continuous Deployment
permalink: /continuous-deployment/
---
class: center, middle

# Continuous Deployment
Agile Software Development & DevOps

---
# Agenda

1. [Overview](#overview)
1. [Production environment](#production-environment)
1. [Cloud deployments](#cloud-deployments)
1. [SSH into a Digital Ocean Droplet](#ssh-digital-ocean)
1. [Update CentOS](#update-centos)
1. [Install Node.js on CentOS](#install-node)

---
class: center, middle
name: overview

# Overview

---
## Definition
Continuous Deployment is automatically deploying - making software available to its end-users - every time a change is made.

---
## Caveats
New releases of software, of course, must still successfully build and pass unit, integration and system tests before deployment.

---
## Automation Pipeline
With version control, code linters, automated builds, and automated testing, continuous deployment is the natural evolution of a fully automated software development pipeline.

---
class: center, middle
name: production-environment

# Production environment

---
## Hosting levels
There are several levels of hosting available for web applications, with many companies catering to each type
- Shared hosting
- Virtual Private Servers (VPS)
- Dedicated machines
- Cloud services

---
## Shared hosting
With shared hosting, a developer receives an account on a web server shared by hundreds, if not thousands, of other developers.
- Historically the cheapest form of hosting
- May have restrictions in what is allowed to bee done in the account
- If one developer consumes more resources than expected, other developers may feel the effects

---
## Virtual Private Servers (VPS)
With VPS, a developer receives a virtual machine running on a physical machine shared by hundreds, if not thousands, of other users.
- A step up from shared hosting
- Developers usually have discretion to do whatever they want in their virtual machine
- Each virtual machine runs in an isolated, sandboxed environment

---
## Dedicated machine
With a dedicated machine, developers rent a single physical machine managed by the hosting company.
- A dedicated physical machine
- Admin rights to do whatever you want with it
- Software and hardware management services usually offered at additional cost.

---
class: center, middle
name: cloud-deployments

# Cloud deployments

---
## Cloud services

A cloud is usually used to mean a grid of hundreds or thousands of physical computers all inter-networked, but presented to a developer as a single virtual machine.  

Any one application may run spread across many different physical machines.

The world of cloud deployment is dominated by a few players:
- Amazon Web Services
- Microsoft Azure
- Google Cloud Platform

These are industrial-strength hosting solutions with obtuse interfaces and extensive capabilities that may be overkill and intimidating for most ordinary mortals.

---
## Infrastructure-as-a-Service (IaaS)
Other providers handle much of the setup of a cloud infrastructure (compute resources, storage resources, networking interoperability, etc) without requiring the user to configure all details.
- Amazon Lightsail
- Amazon CloudFormation
- Digital Ocean
- Linode

From IaaS, developers leverage the Cloud to receive the necessary [virtual] hardware and networking abilites upon which to develop.

---
## Platform-as-a-Service (PaaS)
Whereas IaaS provides the hardware and networking of a cloud deployment, PaaS provide the automated install and setup of the software systems, libraries, and frameworks necessary to deploy an application.
- Heroku
- Nodejitsu
- Platform.sh
- Google App Engine

From PaaS, developers receive an environment with software systems already setup with an appropriate inrastructure and they can simply get to work on a specific type of project development.

---
class: center, middle
name: ssh-digital-ocean

# SSH into a Digital Ocean Droplet

---
## Concept
We will create an account with the cloud provider, Digital Ocean and set up SSH keys that allow us to log in without a password.

---
## Create a Digital Ocean Droplet
* Create an account on Digital Ocean - use [this referral link*](https://m.do.co/c/4d1066078eb0) for $50 credit to use within 1 month
* Create a Droplet - select the cheapest plan with no extra options
* Choose CentOS as the operating system

* Disclaimer: I receive a referral fee if you end up paying for a Digital Ocean account, but it saves you money to use the referral.

---
## Create a local  SSH key
Create an assymetric pair of keys locally (on your own computer):
```
ssh-keygen -t rsa
```

Save the keys into the default file presented.  Do not set a password.

This creates two keys in two files:
* id_rsa - your private key... never share this with anyone
* id_rsa.pub - your public key... feel free to share this

---
## Copy the SSH key to Digital Ocean
Locate the file with the public key you created in the previous step and copy the contents to the clipboard.

The following example shows how to do this for a user named `foobar` on a Mac.
```
cat /Users/foobar/.ssh/id_rsa.pub | pbcopy
```

Now paste this into the Digital Ocean SSH Key page and save.

---
name: login-to-droplet

## Log into the Digital Ocean Droplet
With SSH keys in place on both your local machine and the Digital Ocean server, you can log in.  E.g.
```
ssh root@123.456.789
```

---
class: center, middle
name: update-centos

# Update CentOS

---
## Concept
We will update the OS and install the developer tools on the Digital Ocean Droplet

This assumes you have already [set up SSH keys](#ssh-digital-ocean) and [logged in](#login-to-droplet) to your Droplet.

---
## Update system software
Update any out of date CentOS packages:
```
yum -y update
```

---
## Dev tools
Install a variety of development tools:
```
yum -y groupinstall "Development Tools"
```

---
## A popular text editor
A basic text editor, vim:
```
yum -y install vim
```

---
## Better text editor
And a better text editor, emacs:
```
yum -y install emacs
```

---
## Networking tools
Networking tools:
```
yum -y install net-tools
```

---
## Install Git
Git version control:
```
yum -y install git
```

---
class: center, middle
name: install-node

# Install Node.js on CentOS

---
## Download Node.js
Downloading of Node.js packagees is handled on CentOS by running a bash script.  The following command downloads the bash script and pipes it to bash for execution:
```
curl -sL https://rpm.nodesource.com/setup_12.x | bash -
```

---
## Install Node
Node.js is not yet installed.  To install it, run the following:
on CentOS 
```
yum install -y nodejs
```

---
## Verify install
Now Node.js is installed.  Trust but verify.  Run the following to check the versions of node and npm:
```
node -v
```

```
npm -v
```

---
## Install useful modules

---

class: center, middle

# Conclusions

---

# Conclusions
Thank you. Bye.

